######################################################################
# Automatically generated by qmake (2.01a) Sun Feb 9 19:16:01 2014
######################################################################

# enable C++11 support
equals(QT_MAJOR_VERSION, 5) { CONFIG += c++11 }
equals(QT_MAJOR_VERSION, 4) { QMAKE_CXXFLAGS += -std=c++11 }
equals(QT_MAJOR_VERSION, 3) { QMAKE_CXXFLAGS += -std=c++0x }

TEMPLATE = app
TARGET = unittests
DEPENDPATH += .
INCLUDEPATH += . ../libscidavis ../libscidavis/src ../tmp/scidavis ../scidavis
LIBS += -L ../libscidavis -lscidavis -lUnitTest++ -lboost_regex

POST_TARGETDEPS=../libscidavis/libscidavis.a

CONFIG        += qt warn_on exceptions opengl thread zlib
QT            += opengl network svg xml
equals(QT_MAJOR_VERSION, 5) { QT += printsupport }
MOC_DIR        = ../tmp/scidavis
OBJECTS_DIR    = ../tmp/test

include(../config.pri)
python {
  PYTHONBIN = $$(PYTHON)
  isEmpty( PYTHONBIN ) {
    PYTHONBIN = python
  }

  unix {
        macx {
        LIBS += -framework Python
      } else {
        LIBS += $$system($$PYTHONBIN -c "\"from distutils import sysconfig;import sys; sys.stdout.write('-lpython'+sysconfig.get_config_var('VERSION')+(sysconfig.get_config_var('ABIFLAGS') or ''))\"")
      }
  }
}

liborigin {
  !packagesExist(liborigin) | !contains(PRESET, linux_package) {
    LIBS += ../3rdparty/liborigin/liborigin.a
    POST_TARGETDEPS += ../3rdparty/liborigin/liborigin.a
  } else {
    CONFIG += link_pkgconfig
    PKGCONFIG += liborigin
  }
}


# Input
#HEADERS += unittests.h
SOURCES += main.cpp applicationWindow.cpp readWriteProject.cpp fft.cpp testPaintDevice.cpp 3dplot.cpp menus.cpp arrowMarker.cpp

########### Future code backported from the aspect framework ##################
DEFINES += LEGACY_CODE_0_2_x
INCLUDEPATH += ../libscidavis/src/future
