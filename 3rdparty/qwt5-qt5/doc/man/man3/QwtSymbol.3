.TH "QwtSymbol" 3 "Tue Nov 20 2012" "Version 5.2.3" "Qwt User's Guide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QwtSymbol \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <qwt_symbol\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBStyle\fP { \fBNoSymbol\fP =  -1, \fBEllipse\fP, \fBRect\fP, \fBDiamond\fP, \fBTriangle\fP, \fBDTriangle\fP, \fBUTriangle\fP, \fBLTriangle\fP, \fBRTriangle\fP, \fBCross\fP, \fBXCross\fP, \fBHLine\fP, \fBVLine\fP, \fBStar1\fP, \fBStar2\fP, \fBHexagon\fP, \fBStyleCnt\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQwtSymbol\fP ()"
.br
.ti -1c
.RI "\fBQwtSymbol\fP (\fBStyle\fP st, const QBrush &bd, const QPen &pn, const QSize &s)"
.br
.ti -1c
.RI "virtual \fB~QwtSymbol\fP ()"
.br
.ti -1c
.RI "const QBrush & \fBbrush\fP () const "
.br
.ti -1c
.RI "virtual \fBQwtSymbol\fP * \fBclone\fP () const "
.br
.ti -1c
.RI "void \fBdraw\fP (QPainter *p, const QPoint &pt) const "
.br
.ti -1c
.RI "void \fBdraw\fP (QPainter *p, int x, int y) const "
.br
.ti -1c
.RI "virtual void \fBdraw\fP (QPainter *p, const QRect &r) const "
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBQwtSymbol\fP &) const "
.br
.ti -1c
.RI "virtual bool \fBoperator==\fP (const \fBQwtSymbol\fP &) const "
.br
.ti -1c
.RI "const QPen & \fBpen\fP () const "
.br
.ti -1c
.RI "void \fBsetBrush\fP (const QBrush &b)"
.br
.ti -1c
.RI "void \fBsetPen\fP (const QPen &p)"
.br
.ti -1c
.RI "void \fBsetSize\fP (const QSize &s)"
.br
.ti -1c
.RI "void \fBsetSize\fP (int a, int b=-1)"
.br
.ti -1c
.RI "void \fBsetStyle\fP (\fBStyle\fP s)"
.br
.ti -1c
.RI "const QSize & \fBsize\fP () const "
.br
.ti -1c
.RI "\fBStyle\fP \fBstyle\fP () const "
.br
.in -1c
.SH "Detailed Description"
.PP 
A class for drawing symbols\&. 
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBQwtSymbol::Style\fP"
Style 
.PP
\fBSee also:\fP
.RS 4
\fBsetStyle()\fP, \fBstyle()\fP 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "QwtSymbol::QwtSymbol ()"
Default Constructor
.PP
The symbol is constructed with gray interior, black outline with zero width, no size and style 'NoSymbol'\&. 
.SS "QwtSymbol::QwtSymbol (\fBQwtSymbol::Style\fPstyle, const QBrush &brush, const QPen &pen, const QSize &size)"

.PP
Constructor\&. \fBParameters:\fP
.RS 4
\fIstyle\fP Symbol Style 
.br
\fIbrush\fP brush to fill the interior 
.br
\fIpen\fP outline pen 
.br
\fIsize\fP size 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "\fBQwtSymbol\fP * QwtSymbol::clone () const\fC [virtual]\fP"
Allocate and return a symbol with the same attributes 
.PP
\fBReturns:\fP
.RS 4
Cloned symbol 
.RE
.PP

.SS "void QwtSymbol::draw (QPainter *painter, const QPoint &pos) const"

.PP
Draw the symbol at a specified point\&. \fBParameters:\fP
.RS 4
\fIpainter\fP Painter 
.br
\fIpos\fP Center of the symbol 
.RE
.PP

.SS "void QwtSymbol::draw (QPainter *painter, const QRect &r) const\fC [virtual]\fP"

.PP
Draw the symbol into a bounding rectangle\&. This function assumes that the painter has been initialized with brush and pen before\&. This allows a much more performant implementation when painting many symbols with the same brush and pen like in curves\&.
.PP
\fBParameters:\fP
.RS 4
\fIpainter\fP Painter 
.br
\fIr\fP Bounding rectangle 
.RE
.PP

.SS "void QwtSymbol::setBrush (const QBrush &brush)"

.PP
Assign a brush\&. The brush is used to draw the interior of the symbol\&. 
.PP
\fBParameters:\fP
.RS 4
\fIbrush\fP Brush 
.RE
.PP

.SS "void QwtSymbol::setPen (const QPen &pen)"
Assign a pen
.PP
The pen is used to draw the symbol's outline\&.
.PP
The width of non cosmetic pens is scaled according to the resolution of the paint device\&.
.PP
\fBParameters:\fP
.RS 4
\fIpen\fP Pen 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBpen()\fP, \fBsetBrush()\fP, \fBQwtPainter::scaledPen()\fP 
.RE
.PP

.SS "void QwtSymbol::setSize (const QSize &size)"
Set the symbol's size 
.PP
\fBParameters:\fP
.RS 4
\fIsize\fP Size 
.RE
.PP

.SS "void QwtSymbol::setSize (intwidth, intheight = \fC-1\fP)"

.PP
Specify the symbol's size\&. If the 'h' parameter is left out or less than 0, and the 'w' parameter is greater than or equal to 0, the symbol size will be set to (w,w)\&. 
.PP
\fBParameters:\fP
.RS 4
\fIwidth\fP Width 
.br
\fIheight\fP Height (defaults to -1) 
.RE
.PP

.SS "void QwtSymbol::setStyle (\fBQwtSymbol::Style\fPs)"

.PP
Specify the symbol style\&. The following styles are defined:
.IP "\fBNoSymbol\fP" 1c
No Style\&. The symbol cannot be drawn\&. 
.IP "\fBEllipse\fP" 1c
Ellipse or circle 
.IP "\fBRect\fP" 1c
Rectangle 
.IP "\fBDiamond\fP" 1c
Diamond 
.IP "\fBTriangle\fP" 1c
Triangle pointing upwards 
.IP "\fBDTriangle\fP" 1c
Triangle pointing downwards 
.IP "\fBUTriangle\fP" 1c
Triangle pointing upwards 
.IP "\fBLTriangle\fP" 1c
Triangle pointing left 
.IP "\fBRTriangle\fP" 1c
Triangle pointing right 
.IP "\fBCross\fP" 1c
Cross (+) 
.IP "\fBXCross\fP" 1c
Diagonal cross (X) 
.IP "\fBHLine\fP" 1c
Horizontal line 
.IP "\fBVLine\fP" 1c
Vertical line 
.IP "\fBStar1\fP" 1c
X combined with + 
.IP "\fBStar2\fP" 1c
Six-pointed star 
.IP "\fBHexagon\fP" 1c
Hexagon
.PP
.PP
\fBParameters:\fP
.RS 4
\fIs\fP style 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Qwt User's Guide from the source code\&.
